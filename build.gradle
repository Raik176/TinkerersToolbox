plugins {
    id "com.modrinth.minotaur" version "2.+"
}

group = project.maven_group

tasks.register('buildInfo') {
    try {
        def proc = "git rev-parse --short HEAD".execute()
        proc.waitFor()
        if (proc.exitValue() == 0) {
            ext.rev = proc.text.trim()
        } else {
            throw new Exception("lolz")
        }
    } catch (ignored) {
        ext.rev = "N/A"
    }

    def build_env = System.getenv("BUILD_NUMBER")
    if (build_env != null) {
        ext.buildNum = build_env
    } else {
        ext.buildNum = "dev.${ext.rev}"
    }
}
def artifact_version = "${project.mod_version}.${project.buildInfo.buildNum}"
version = "${project.minecraft_version}-${artifact_version}"
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Version: ${version}"

subprojects {
    apply plugin: 'java'

    version = rootProject.version
    group = rootProject.maven_group

    repositories {
        maven {
            name = "Jared's maven" //JEI
            url = "https://maven.blamejared.com/"
        }
        maven {
            name = "ModMaven" // JEI Fallback
            url = "https://modmaven.dev"
        }
        maven {
            name = "CurseMaven" // Jade
            url "https://www.cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }

    base {
        archivesName = rootProject.archives_base_name
    }

    processResources {
        var expandProps = [
            mod_id               : rootProject.mod_id,
            mod_version          : version,
            fabric_loader_version: rootProject.fabric_loader_version,
            fabric_api_version   : rootProject.fabric_api_version,
            minecraft_version    : rootProject.minecraft_version
        ]

        filesMatching("fabric.mod.json") {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${project.base.archivesName.get()}" }
        }
    }

}
/*
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "${mod_id}"
    versionName = "Tinkerer's Toolbox ${project.mod_version} Fabric"
    versionNumber = "${version}-fabric"
    versionType = "alpha"
    uploadFile = remapJar
    gameVersions = ["1.21.1"]
    loaders = ["fabric", "quilt"]
    dependencies {
        required.version "fabric-api", "${fabric_api_version}"
        optional.project "jade"
        optional.project "jei"
    }
    syncBodyFrom = rootProject.file("README.md").text
}
 */
